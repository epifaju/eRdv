version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: erdv_postgres
    environment:
      POSTGRES_DB: erdv_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - erdv_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: erdv_backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/erdv_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      JWT_SECRET: your-secret-key-here-make-it-very-long-and-secure-for-production
      JWT_EXPIRATION: 86400000
      # Configuration SMTP (Ã  adapter selon vos besoins)
      SPRING_MAIL_HOST: smtp.gmail.com
      SPRING_MAIL_PORT: 587
      SPRING_MAIL_USERNAME: your-email@gmail.com
      SPRING_MAIL_PASSWORD: your-app-password
    ports:
      - "8084:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - erdv_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: erdv_frontend
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - erdv_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  erdv_network:
    driver: bridge
